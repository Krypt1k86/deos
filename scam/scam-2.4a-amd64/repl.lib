(define (printError e)
    (println "EXCEPTION: " (get 'code e) "\n" (get 'value e))
        ;(suffix (get 'value e) (+ 1 (stringUntil (get 'value e) ":")))
        ;)
    )

(define (repl)
    (define e nil)
    (define result nil)
    (set! e (catch (readExpr)))
    (while (and (neq? e 'quit) (neq? e 'q))
        (cond 
            ((and (error? e) (eq? (get 'code e) 'unexpectedEOF))
                (println)
                (return 'done)
                )
            ((and (error? e) (eq? (get 'code e) 'emptyExpression))
                (printError e)
                (return 'done)
                )
            (else
                (set! result (catch (eval e this)))
                (if (error? result)
                    (printError result)
                    (println result)
                    )
                )
            )
        (set! e (catch (readExpr)))
        )
    )

(print "Welcome to the Scam Interpreter!")
(println " To exit, enter <Ctl>-D, q, or quit")
(repl)
(println "Happy happy, joy joy!");
